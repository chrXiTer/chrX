<link rel="stylesheet" type="text/css" href="../c3.css" />

<body class="html">
<div id="wrapper">
<div id="maincontent">

<h1>SQL VIEW（视图）</h1>

<div  id="tpn">
<ul class="prenext">
<li class="pre"><a href="sql_autoincrement.htm"  title="SQL AUTO INCREMENT 字段">SQL Increment</a></li>
<li class="next"><a href="sql_dates.htm"  title="SQL Date 函数">SQL Date</a></li>
</ul>
</div>

<div>
<p><strong>视图是可视化的表。</strong></p>
<p><strong>本章讲解如何创建、更新和删除视图。</strong></p>
</div>

<div>
<h2>SQL CREATE VIEW 语句</h2>

<h3>什么是视图？</h3>

<p>在 SQL 中，视图是基于 SQL 语句的结果集的可视化的表。</p>

<p>视图包含行和列，就像一个真实的表。视图中的字段就是来自一个或多个数据库中的真实的表中的字段。我们可以向视图添加 SQL 函数、WHERE 以及 JOIN 语句，我们也可以提交数据，就像这些来自于某个单一的表。</p>

<p class="note"><span>注释：</span>数据库的设计和结构不会受到视图中的函数、where 或 join 语句的影响。</p>

<h3>SQL CREATE VIEW 语法</h3>

<pre>
CREATE VIEW view_name AS
SELECT column_name(s)
FROM table_name
WHERE condition
</pre>

<p class="note"><span>注释：</span>视图总是显示最近的数据。每当用户查询视图时，数据库引擎通过使用 SQL 语句来重建数据。</p>
</div>

<div>
<h2>SQL CREATE VIEW 实例</h2>

<p>可以从某个查询内部、某个存储过程内部，或者从另一个视图内部来使用视图。通过向视图添加函数、join 等等，我们可以向用户精确地提交我们希望提交的数据。</p>

<p>样本数据库 Northwind 拥有一些被默认安装的视图。视图 &quot;Current Product List&quot;  会从 Products 表列出所有正在使用的产品。这个视图使用下列 SQL 创建：</p>
<pre><code>CREATE VIEW</code> [Current Product List] <code>AS</code>
<code>SELECT</code> ProductID,ProductName
<code>FROM</code> Products
<code>WHERE</code> Discontinued=No</pre>
<p>我们可以查询上面这个视图：<p>
<pre>SELECT * FROM [Current Product List]</pre>

<p>Northwind 样本数据库的另一个视图会选取 Products 表中所有单位价格高于平均单位价格的产品：</p>
<pre>
<code>CREATE VIEW</code> [Products Above Average Price] <code>AS</code>
<code>SELECT</code> ProductName,UnitPrice
<code>FROM</code> Products
<code>WHERE</code> UnitPrice&gt;(SELECT AVG(UnitPrice) FROM Products) 
</pre>

<p>我们可以像这样查询上面这个视图：</p>
<pre>SELECT * FROM [Products Above Average Price]</pre>

<p>另一个来自 Northwind 数据库的视图实例会计算在 1997 年每个种类的销售总数。请注意，这个视图会从另一个名为 &quot;Product Sales for 1997&quot; 的视图那里选取数据：</p>
<pre>
<code>CREATE VIEW</code> [Category Sales For 1997] <code>AS</code>
<code>SELECT DISTINCT</code> CategoryName,Sum(ProductSales) <code>AS</code> CategorySales
<code>FROM</code> [Product Sales for 1997]
<code>GROUP BY</code> CategoryName 
</pre>

<p>我们可以像这样查询上面这个视图：</p>
<pre>SELECT * FROM [Category Sales For 1997]</pre>

<p>我们也可以向查询添加条件。现在，我们仅仅需要查看 &quot;Beverages&quot; 类的全部销量：</p>
<pre>
<code>SELECT</code> * <code>FROM</code> [Category Sales For 1997]
<code>WHERE</code> CategoryName='Beverages'
</pre>
</div>

<div>
<h2>SQL 更新视图</h2>

<p>您可以使用下面的语法来更新视图：</p>

<pre>
SQL CREATE OR REPLACE VIEW Syntax
CREATE OR REPLACE VIEW view_name AS
SELECT column_name(s)
FROM table_name
WHERE condition
</pre>

<p>现在，我们希望向 &quot;Current Product List&quot; 视图添加 &quot;Category&quot; 列。我们将通过下列 SQL 更新视图：</p>

<pre>
CREATE VIEW [Current Product List] AS
SELECT ProductID,ProductName,Category
FROM Products
WHERE Discontinued=No
</pre>
</div>

<div>
<h2>SQL 撤销视图</h2>

<p>您可以通过 DROP VIEW 命令来删除视图。</p>

<pre>
SQL DROP VIEW Syntax
DROP VIEW view_name
</pre>
</div>

</div>
</div>
<script src="../chrX.js"></script>