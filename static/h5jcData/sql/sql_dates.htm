<link rel="stylesheet" type="text/css" href="../c3.css" />

<body class="html">
<div id="wrapper">
<div id="maincontent">

<h1>SQL Date 函数</h1>

<div>
<h2>SQL 日期</h2>

<p>当我们处理日期时，最难的任务恐怕是确保所插入的日期的格式，与数据库中日期列的格式相匹配。</p>

<p>只要数据包含的只是日期部分，运行查询就不会出问题。但是，如果涉及时间，情况就有点复杂了。</p>

<p>在讨论日期查询的复杂性之前，我们先来看看最重要的内建日期处理函数。</p>
</div>

<div>
<h2>MySQL Date 函数</h2>

<p>下面的表格列出了 MySQL 中最重要的内建日期函数：</p>

<table class="dataintable">
<tr>
<th style="width:30%">函数</th>
<th>描述</th>
</tr>

<tr>
<td><a href="func_now.htm" >NOW()</a></td>
<td>返回当前的日期和时间</td>
</tr>

<tr>
<td><a href="func_curdate.htm" >CURDATE()</a></td>
<td>返回当前的日期</td>
</tr>

<tr>
<td><a href="func_curtime.htm" >CURTIME()</a></td>
<td>返回当前的时间</td>
</tr>

<tr>
<td><a href="func_date.htm" >DATE()</a></td>
<td>提取日期或日期/时间表达式的日期部分</td>
</tr>

<tr>
<td><a href="func_extract.htm" >EXTRACT()</a></td>
<td>返回日期/时间按的单独部分</td>
</tr>

<tr>
<td><a href="func_date_add.htm" >DATE_ADD()</a></td>
<td>给日期添加指定的时间间隔</td>
</tr>

<tr>
<td><a href="func_date_sub.htm" >DATE_SUB()</a></td>
<td>从日期减去指定的时间间隔</td>
</tr>

<tr>
<td><a href="func_datediff_mysql.htm" >DATEDIFF()</a></td>
<td>返回两个日期之间的天数</td>
</tr>

<tr>
<td><a href="func_date_format.htm" >DATE_FORMAT()</a></td>
<td>用不同的格式显示日期/时间</td>
</tr>
</table>
</div>

<div>
<h2>SQL Server Date 函数</h2>

<p>下面的表格列出了 SQL Server 中最重要的内建日期函数：</p>

<table class="dataintable">
<tr>
<th style="width:30%">函数</th>
<th>描述</th>
</tr>

<tr>
<td><a href="func_getdate.htm" >GETDATE()</a></td>
<td>返回当前日期和时间</td>
</tr>

<tr>
<td><a href="func_datepart.htm" >DATEPART()</a></td>
<td>返回日期/时间的单独部分</td>
</tr>

<tr>
<td><a href="func_dateadd.htm" >DATEADD()</a></td>
<td>在日期中添加或减去指定的时间间隔</td>
</tr>

<tr>
<td><a href="func_datediff.htm" >DATEDIFF()</a></td>
<td>返回两个日期之间的时间</td>
</tr>

<tr>
<td><a href="func_convert.htm" >CONVERT()</a></td>
<td>用不同的格式显示日期/时间</td>
</tr>
</table>
</div>

<div>
<h2>SQL Date 数据类型</h2>

<p>MySQL 使用下列数据类型在数据库中存储日期或日期/时间值：</p>

<ul>
<li>DATE - 格式 YYYY-MM-DD</li>
<li>DATETIME - 格式: YYYY-MM-DD HH:MM:SS</li>
<li>TIMESTAMP - 格式: YYYY-MM-DD HH:MM:SS</li>
<li>YEAR - 格式 YYYY 或 YY</li>
</ul>

<p>SQL Server 使用下列数据类型在数据库中存储日期或日期/时间值：</p>

<ul>
<li>DATE - 格式 YYYY-MM-DD</li>
<li>DATETIME - 格式: YYYY-MM-DD HH:MM:SS</li>
<li>SMALLDATETIME - 格式: YYYY-MM-DD HH:MM:SS</li>
<li>TIMESTAMP - 格式: 唯一的数字</li>
</ul>
</div>

<div>
<h2>SQL 日期处理</h2>

<p>如果不涉及时间部分，那么我们可以轻松地比较两个日期！</p>

<p>假设我们有下面这个 &quot;Orders&quot; 表：</p>

<table class="dataintable">
<tr>
<th style="width:20%">OrderId</th>
<th style="width:40%">ProductName</th>
<th style="width:40%">OrderDate</th>
</tr>

<tr>
<td>1</td>
<td>computer</td>
<td>2008-12-26</td>
</tr>

<tr>
<td>2</td>
<td>printer</td>
<td>2008-12-26</td>
</tr>

<tr>
<td>3</td>
<td>electrograph</td>
<td>2008-11-12</td>
</tr>

<tr>
<td>4</td>
<td>telephone</td>
<td>2008-10-19</td>
</tr>
</table>

<p>现在，我们希望从上表中选取 OrderDate 为 &quot;2008-12-26&quot; 的记录。</p>

<p>我们使用如下 SELECT 语句：</p>

<pre>SELECT * FROM Orders WHERE OrderDate='2008-12-26'</pre>

<p>结果集：</p>

<table class="dataintable">
<tr>
<th style="width:20%">OrderId</th>
<th style="width:40%">ProductName</th>
<th style="width:40%">OrderDate</th>
</tr>

<tr>
<td>1</td>
<td>computer</td>
<td>2008-12-26</td>
</tr>

<tr>
<td>3</td>
<td>electrograph</td>
<td>2008-12-26</td>
</tr>
</table>

<p>现在假设 &quot;Orders&quot; 类似这样（请注意 &quot;OrderDate&quot; 列中的时间部分）：</p>

<table class="dataintable">
<tr>
<th style="width:20%">OrderId</th>
<th style="width:40%">ProductName</th>
<th style="width:40%">OrderDate</th>
</tr>

<tr>
<td>1</td>
<td>computer</td>
<td>2008-12-26 16:23:55</td>
</tr>

<tr>
<td>2</td>
<td>printer</td>
<td>2008-12-26 10:45:26</td>
</tr>

<tr>
<td>3</td>
<td>electrograph</td>
<td>2008-11-12 14:12:08</td>
</tr>

<tr>
<td>4</td>
<td>telephone</td>
<td>2008-10-19 12:56:10</td>
</tr>
</table>

<p>如果我们使用上面的 SELECT 语句：</p>

<pre>SELECT * FROM Orders WHERE OrderDate='2008-12-26'</pre>

<p>那么我们得不到结果。这是由于该查询不含有时间部分的日期。</p>

<p class="tip"><span>提示：</span>如果您希望使查询简单且更易维护，那么请不要在日期中使用时间部分！</p>
</div>

</div>
</div>
<script src="../chrX.js"></script>